# Alternative multi-container approach
# Use this if the single container approach has issues

# Node.js service Dockerfile
FROM node:22-alpine AS nodejs-service

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    ffmpeg \
    && ln -sf python3 /usr/bin/python

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application (build separately with: npm run build)
COPY dist/ ./dist/
COPY scripts/ ./scripts/

# Create directories
RUN mkdir -p /app/audio_file /app/models

# Expose Node.js port
EXPOSE 5685

# Set environment variables
ENV NODE_ENV=production
ENV PORT=5685

# Start Node.js service
CMD ["npm", "run", "start:node-only"]